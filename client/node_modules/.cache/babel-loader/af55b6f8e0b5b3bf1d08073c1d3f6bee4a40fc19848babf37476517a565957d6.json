{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moble_edu\\\\Desktop\\\\st\\\\MML\\\\client\\\\src\\\\pages\\\\profile\\\\EditPw.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPw = ({\n  user,\n  apiUrl,\n  setShowPasswordForm\n}) => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleCurrent = async e => {\n    setCurrentPassword(e.target.value);\n    try {\n      const res = await axios.post(`${apiUrl}/auth/verify-password`, {\n        userId: user._id,\n        password: e.target.value\n      }, {\n        withCredentials: true\n      });\n      if (!res.data.success) {\n        setPasswordError(\"현재 비밀번호가 맞지 않습니다.\");\n      } else {\n        setPasswordError(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n      setPasswordError(\"현재 비밀번호 확인에 실패했습니다.\");\n    }\n  };\n  const handleConfirm = e => {\n    setConfirmPassword(e.target.value);\n    if (newPassword !== e.target.value) {\n      setPasswordError(\"새 비밀번호가 일치하지 않습니다.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n  const handleClick = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await axios.put(`${apiUrl}/users/${user._id}/password`, {\n        currentPassword,\n        newPassword\n      }, {\n        withCredentials: true\n      });\n      setShowPasswordForm(false);\n      setLoading(false);\n      navigator(\"/\");\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pageTitle2\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"CurrentPW\",\n          children: \"\\uC774\\uC804 \\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"CurrentPW\",\n          autoComplete: \"off\",\n          className: \"madalInput\",\n          onChange: handleCurrent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"madalInput\",\n          autoComplete: \"off\",\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ConfirmPW\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"ConfirmPW\",\n          className: \"madalInput\",\n          autoComplete: \"off\",\n          onChange: handleConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"editBtn\",\n          disabled: loading,\n          onClick: handleClick,\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancleBtn\",\n          onClick: () => setShowPasswordForm(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPw, \"k2sf4soNVgbvqVGb4VCVGzNLSPA=\");\n_c = EditPw;\nexport default EditPw;\nvar _c;\n$RefreshReg$(_c, \"EditPw\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EditPw","user","apiUrl","setShowPasswordForm","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","loading","setLoading","handleCurrent","e","target","value","res","post","userId","_id","password","withCredentials","data","success","err","console","log","handleConfirm","handleClick","preventDefault","put","navigator","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","autoComplete","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moble_edu/Desktop/st/MML/client/src/pages/profile/EditPw.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPw = ({ user, apiUrl, setShowPasswordForm }) => {\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCurrent = async (e) => {\r\n        setCurrentPassword(e.target.value);\r\n        try {\r\n            const res = await axios.post(\r\n                `${apiUrl}/auth/verify-password`,\r\n                {\r\n                    userId: user._id,\r\n                    password: e.target.value,\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            if (!res.data.success) {\r\n                setPasswordError(\"현재 비밀번호가 맞지 않습니다.\");\r\n            } else {\r\n                setPasswordError(\"\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setPasswordError(\"현재 비밀번호 확인에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    const handleConfirm = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n        if (newPassword !== e.target.value) {\r\n            setPasswordError(\"새 비밀번호가 일치하지 않습니다.\");\r\n        } else {\r\n            setPasswordError(\"\");\r\n        }\r\n    };\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.put(\r\n                `${apiUrl}/users/${user._id}/password`,\r\n                {\r\n                    currentPassword,\r\n                    newPassword,\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            setShowPasswordForm(false);\r\n            setLoading(false);\r\n            navigator(\"/\")\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modalContent\">\r\n                <h2 className=\"pageTitle2\">비밀번호 변경하기</h2>\r\n                <form>\r\n                    <label htmlFor=\"CurrentPW\">이전 비밀번호</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"CurrentPW\"\r\n                        autoComplete=\"off\"\r\n                        className=\"madalInput\"\r\n                        onChange={handleCurrent}\r\n                    />\r\n                    {passwordError && <div>{passwordError}</div>}\r\n                    <label htmlFor=\"password\">비밀번호</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"madalInput\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"ConfirmPW\">비밀번호 확인</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"ConfirmPW\"\r\n                        className=\"madalInput\"\r\n                        autoComplete=\"off\"\r\n                        onChange={handleConfirm}\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"editBtn\"\r\n                        disabled={loading}\r\n                        onClick={handleClick}\r\n                    >\r\n                        비밀번호 변경하기\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"cancleBtn\"\r\n                        onClick={() => setShowPasswordForm(false)}\r\n                    >\r\n                        취소\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPw;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}