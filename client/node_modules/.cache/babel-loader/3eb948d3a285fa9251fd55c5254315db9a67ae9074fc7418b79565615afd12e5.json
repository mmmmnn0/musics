{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moble_edu\\\\Desktop\\\\st\\\\MML\\\\client\\\\src\\\\components\\\\musiclist\\\\MusicList.jsx\",\n  _s = $RefreshSig$();\nimport useFetch from \"../../hooks/useFetch\";\nimport \"./musiclist.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MusicList = () => {\n  _s();\n  const aptUrl = process.env.REACT_APP_API_URL;\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`${aptUrl}/musics/random?limit=5`);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp\",\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mp\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mp\",\n    children: loading ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mpItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.photos[0],\n          alt: \"\",\n          className: \"mpImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mpName\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mpUploder\",\n          children: item.uploder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicList, \"r14mJDRFIohEWG5JuFWBli83tkQ=\", false, function () {\n  return [useFetch];\n});\n_c = MusicList;\nexport default MusicList;\nvar _c;\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"names":["useFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicList","_s","aptUrl","process","env","REACT_APP_API_URL","data","loading","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","item","src","photos","alt","name","uploder","_id","_c","$RefreshReg$"],"sources":["C:/Users/moble_edu/Desktop/st/MML/client/src/components/musiclist/MusicList.jsx"],"sourcesContent":["import useFetch from \"../../hooks/useFetch\";\r\nimport \"./musiclist.css\";\r\n\r\nconst MusicList = () => {\r\n    const aptUrl = process.env.REACT_APP_API_URL;\r\n    const { data, loading, error } = useFetch(\r\n        `${aptUrl}/musics/random?limit=5`\r\n    );\r\n\r\n    if (loading) {\r\n        return <div className=\"mp\">loading</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"mp\">Error: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mp\">\r\n            {loading ? (\r\n                \"loading\"\r\n            ) : (\r\n                <>\r\n                    {data.map((item) => (\r\n                        <div className=\"mpItem\" key={item._id}>\r\n                            <img\r\n                                src={item.photos[0]}\r\n                                alt=\"\"\r\n                                className=\"mpImg\"\r\n                            />\r\n                            <span className=\"mpName\">{item.name}</span>\r\n                            <span className=\"mpUploder\">{item.uploder}</span>\r\n                        </div>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicList;\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC5C,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,QAAQ,CACpC,GAAEO,MAAO,wBACd,CAAC;EAED,IAAIK,OAAO,EAAE;IACT,oBAAOV,OAAA;MAAKY,SAAS,EAAC,IAAI;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C;EAEA,IAAIN,KAAK,EAAE;IACP,oBAAOX,OAAA;MAAKY,SAAS,EAAC,IAAI;MAAAC,QAAA,GAAC,SAAO,EAACF,KAAK,CAACO,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3D;EAEA,oBACIjB,OAAA;IAAKY,SAAS,EAAC,IAAI;IAAAC,QAAA,EACdH,OAAO,GACJ,SAAS,gBAETV,OAAA,CAAAE,SAAA;MAAAW,QAAA,EACKJ,IAAI,CAACU,GAAG,CAAEC,IAAI,iBACXpB,OAAA;QAAKY,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBb,OAAA;UACIqB,GAAG,EAAED,IAAI,CAACE,MAAM,CAAC,CAAC,CAAE;UACpBC,GAAG,EAAC,EAAE;UACNX,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACFjB,OAAA;UAAMY,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAEO,IAAI,CAACI;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjB,OAAA;UAAMY,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEO,IAAI,CAACK;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAPxBG,IAAI,CAACM,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQhC,CACR;IAAC,gBACJ;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CAnCID,SAAS;EAAA,QAEsBL,QAAQ;AAAA;AAAA6B,EAAA,GAFvCxB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}