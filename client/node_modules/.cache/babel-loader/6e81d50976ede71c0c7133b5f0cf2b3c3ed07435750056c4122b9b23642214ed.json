{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moble_edu\\\\Desktop\\\\st\\\\MML\\\\client\\\\src\\\\components\\\\musiclist\\\\MusicList.jsx\",\n  _s2 = $RefreshSig$();\nimport \"./musiclist.css\";\nimport useFetch from \"../../hooks/useFetch\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicList = () => {\n  _s2();\n  const [musics, setMusics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchData = async () => {\n      _s();\n      try {\n        const apiUrl = process.env.REACT_APP_API_URL;\n        const {\n          data,\n          loading,\n          error\n        } = useFetch(`${apiUrl}/musics`);\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        // const data = await response.json();\n        setMusics(data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    _s(fetchData, \"r14mJDRFIohEWG5JuFWBli83tkQ=\", false, function () {\n      return [useFetch];\n    });\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mp\",\n    children: musics.map((music, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mpItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: music.thumbimgUrl,\n        alt: music.title,\n        className: \"mpImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mpTitle\",\n        children: music.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mpUploader\",\n        children: music.uploader ? music.uploader.username : \"Unknown Uploader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${music.views}회 재생`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s2(MusicList, \"Q1Qhsq/2glWM0KzUiz1hraDWMBA=\");\n_c = MusicList;\nexport default MusicList;\nvar _c;\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"names":["useFetch","React","useEffect","useState","jsxDEV","_jsxDEV","MusicList","_s2","musics","setMusics","loading","setLoading","error","setError","_s","$RefreshSig$","fetchData","apiUrl","process","env","REACT_APP_API_URL","data","res","ok","Error","err","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","music","index","src","thumbimgUrl","alt","title","uploader","username","views","_c","$RefreshReg$"],"sources":["C:/Users/moble_edu/Desktop/st/MML/client/src/components/musiclist/MusicList.jsx"],"sourcesContent":["import \"./musiclist.css\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst MusicList = () => {\r\n    const [musics, setMusics] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const apiUrl = process.env.REACT_APP_API_URL;\r\n                const { data, loading, error } = useFetch(`${apiUrl}/musics`);\r\n                if (!res.ok) {\r\n                    throw new Error(\"Network response was not ok\");\r\n                }\r\n                // const data = await response.json();\r\n                setMusics(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error fetching data: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"mp\">\r\n            {musics.map((music, index) => (\r\n                <div className=\"mpItem\" key={index}>\r\n                    <img\r\n                        src={music.thumbimgUrl}\r\n                        alt={music.title}\r\n                        className=\"mpImg\"\r\n                    />\r\n                    <span className=\"mpTitle\">{music.title}</span>\r\n                    <span className=\"mpUploader\">\r\n                        {music.uploader\r\n                            ? music.uploader.username\r\n                            : \"Unknown Uploader\"}\r\n                    </span>\r\n                    <span>{`${music.views}회 재생`}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MusicList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}