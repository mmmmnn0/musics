{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moble_edu\\\\Desktop\\\\st\\\\MML\\\\client\\\\src\\\\pages\\\\profile\\\\EditPw.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPw = ({\n  user,\n  apiUrl,\n  setShowPasswordForm\n}) => {\n  _s();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleCurrent = async e => {\n    setCurrentPassword(e.target.value);\n    try {\n      const res = await axios.post(`${apiUrl}/auth/verify-password`, {\n        userId: user._id,\n        password: e.target.value\n      }, {\n        withCredentials: true\n      });\n      if (!res.data.success) {\n        setPasswordError(\"현재 비밀번호가 맞지 않습니다.\");\n      } else {\n        setPasswordError(\"\");\n      }\n    } catch (err) {\n      console.log(err);\n      setPasswordError(\"현재 비밀번호 확인에 실패했습니다.\");\n    }\n  };\n  const handleConfirm = e => {\n    setConfirmPassword(e.target.value);\n    if (newPassword !== e.target.value) {\n      setPasswordError(\"새 비밀번호가 일치하지 않습니다.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n  const handleClick = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const res = await axios.put(`${apiUrl}/users/${user._id}/password`, {\n        currentPassword,\n        newPassword\n      }, {\n        withCredentials: true\n      });\n      setShowPasswordForm(false);\n      setLoading(false);\n      navigate(\"/profile\");\n    } catch (err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContent\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"madalForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pageTitle2\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"CurrentPW\",\n          children: \"\\uC774\\uC804 \\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"CurrentPW\",\n          autoComplete: \"off\",\n          className: \"madalInput\",\n          onChange: handleCurrent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"pwLabel\",\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"madalInput\",\n          autoComplete: \"off\",\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ConfirmPW\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"ConfirmPW\",\n          className: \"madalInput\",\n          autoComplete: \"off\",\n          onChange: handleConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EditPwBtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"editBtn\",\n            disabled: loading,\n            onClick: handleClick,\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancleBtn\",\n            onClick: () => setShowPasswordForm(false),\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPw, \"2oTgrh2X1qQrLVVxAIwAGpZaqwA=\", false, function () {\n  return [useNavigate];\n});\n_c = EditPw;\nexport default EditPw;\nvar _c;\n$RefreshReg$(_c, \"EditPw\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","EditPw","user","apiUrl","setShowPasswordForm","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","loading","setLoading","navigate","handleCurrent","e","target","value","res","post","userId","_id","password","withCredentials","data","success","err","console","log","handleConfirm","handleClick","preventDefault","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","autoComplete","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/moble_edu/Desktop/st/MML/client/src/pages/profile/EditPw.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPw = ({ user, apiUrl, setShowPasswordForm }) => {\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleCurrent = async (e) => {\r\n        setCurrentPassword(e.target.value);\r\n        try {\r\n            const res = await axios.post(\r\n                `${apiUrl}/auth/verify-password`,\r\n                {\r\n                    userId: user._id,\r\n                    password: e.target.value,\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            if (!res.data.success) {\r\n                setPasswordError(\"현재 비밀번호가 맞지 않습니다.\");\r\n            } else {\r\n                setPasswordError(\"\");\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setPasswordError(\"현재 비밀번호 확인에 실패했습니다.\");\r\n        }\r\n    };\r\n\r\n    const handleConfirm = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n        if (newPassword !== e.target.value) {\r\n            setPasswordError(\"새 비밀번호가 일치하지 않습니다.\");\r\n        } else {\r\n            setPasswordError(\"\");\r\n        }\r\n    };\r\n\r\n    const handleClick = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try {\r\n            const res = await axios.put(\r\n                `${apiUrl}/users/${user._id}/password`,\r\n                {\r\n                    currentPassword,\r\n                    newPassword,\r\n                },\r\n                {\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n            setShowPasswordForm(false);\r\n            setLoading(false);\r\n            navigate(\"/profile\");\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modalContent\">\r\n                <form className=\"madalForm\">\r\n                    <h2 className=\"pageTitle2\">비밀번호 변경하기</h2>\r\n                    <label htmlFor=\"CurrentPW\">이전 비밀번호</label>\r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"CurrentPW\"\r\n                        autoComplete=\"off\"\r\n                        className=\"madalInput\"\r\n                        onChange={handleCurrent}\r\n                    />\r\n                    {passwordError && <div>{passwordError}</div>}\r\n                    <label className=\"pwLabel\" htmlFor=\"password\">비밀번호</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"madalInput\"\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                    />\r\n                    <label htmlFor=\"ConfirmPW\">비밀번호 확인</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"ConfirmPW\"\r\n                        className=\"madalInput\"\r\n                        autoComplete=\"off\"\r\n                        onChange={handleConfirm}\r\n                    />\r\n                    <div className=\"EditPwBtn\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"editBtn\"\r\n                            disabled={loading}\r\n                            onClick={handleClick}\r\n                        >\r\n                            비밀번호 변경하기\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"cancleBtn\"\r\n                            onClick={() => setShowPasswordForm(false)}\r\n                        >\r\n                            취소\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPw;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}